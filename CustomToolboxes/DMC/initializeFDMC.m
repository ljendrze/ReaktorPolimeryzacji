function [ FDMCObject ] = initializeFDMC( FDMCObject, yDesired, yCurrent )
% Komentarz odnośnie działania.

   % FDMCObject.deltaUPast = zeros( FDMCObject.model.inputSize*(FDMCObject.D-1), 1 );
   % FDMCObject.uPast = FDMCObject.model.u0*ones( FDMCObject.model.inputSize * FDMCObject.D, 1 );

   FDMCObject.M = cell( FDMCObject.model.rulesNo, 1 );
   FDMCObject.Mp = cell( FDMCObject.model.rulesNo, 1 );
   FDMCObject.K = cell( FDMCObject.model.rulesNo, 1 );
   for i = 1 : FDMCObject.model.rulesNo
      FDMCObject.M{i} = computeM( FDMCObject.model.inputSize, ...
                                  FDMCObject.model.outputSize, ...
                                  FDMCObject.model.S{i}, ...
                                  FDMCObject.N, ...
                                  FDMCObject.Nu );
      FDMCObject.Mp{i} = computeMp( FDMCObject.model.inputSize, ...
                                    FDMCObject.model.outputSize, ...
                                    FDMCObject.model.S{i}, ...
                                    FDMCObject.N, ...
                                    FDMCObject.D );
      FDMCObject.K{i} = ( ( FDMCObject.M{i}' * FDMCObject.Psi * ...
                            FDMCObject.M{i} + FDMCObject.Lambda ...
                          )^(-1) ...
                        ) * FDMCObject.M{i}' * FDMCObject.Psi;
   end
end
